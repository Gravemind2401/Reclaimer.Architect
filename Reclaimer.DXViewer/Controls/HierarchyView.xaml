<UserControl x:Class="Reclaimer.Controls.HierarchyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Reclaimer.Controls"
             xmlns:s="clr-namespace:Studio.Controls;assembly=Studio"
             xmlns:u="clr-namespace:Reclaimer.Utilities"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Reclaimer;component/Resources/Templates.xaml" />
                <ResourceDictionary Source="/Reclaimer.DXViewer;component/Resources/Templates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <u:IsPaletteNodeConverter x:Key="isPaletteNodeConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <DockPanel>
        <ToolBarTray DockPanel.Dock="Top" IsLocked="True">
            <ToolBar Margin="3,1">
                <ToolBar.Resources>
                    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" />
                            </Trigger>
                        </Style.Triggers>                    
                    </Style>
                </ToolBar.Resources>
                
                <Button Click="btnCollapseAll_Click"
                        ToolTip="Collapse all">
                    <ContentControl Template="{StaticResource ic_CollapseGroup_16x}" />
                </Button>
                <Button Click="btnExpandAll_Click"
                        ToolTip="Expand all">
                    <ContentControl Template="{StaticResource ic_ExpandAll_16x}" />
                </Button>
                <Separator />
                <Button Click="btnAddItem_Click" IsEnabled="False"
                        ToolTip="Add Object">
                    <ContentControl Template="{StaticResource ic_Add_16x}" />
                </Button>
                <Button Click="btnDeleteItem_Click" IsEnabled="False"
                        ToolTip="Delete Object">
                    <ContentControl Template="{StaticResource ic_Remove_color_16x}" />
                </Button>
                <Separator />
                <Button Click="btnEditPalette_Click" ToolTip="Edit Palette"
                        IsEnabled="{Binding SelectedNodeType, Converter={StaticResource isPaletteNodeConverter}}">
                    <ContentControl Template="{StaticResource ic_EditDropDownList_16x}" />
                </Button>
                <Separator />
                <Button Click="btnSave_Click" IsEnabled="False"
                        ToolTip="Save Model">
                    <ContentControl Template="{StaticResource ic_Save_16x}" />
                </Button>
            </ToolBar>
        </ToolBarTray>
        <s:SplitPanel>
            <TreeView x:Name="tv" ItemsSource="{Binding Hierarchy}"
                      SelectedItemChanged="tv_SelectedItemChanged">
                <TreeView.Resources>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                        <!--<Setter Property="ContextMenu" Value="{StaticResource TreeItemContextMenu}" />-->
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="Visibility" Value="{Binding Visibility}" />
                        <!--<Setter Property="IsTextSearchEnabled" Value="{Binding IsExpanded}" />-->
                        <!--<Setter Property="TextSearch.TextPath" Value="Header" />-->
                        <!--<EventSetter Event="MouseDoubleClick" Handler="TreeItemMouseDoubleClick" />-->
                        <!--<EventSetter Event="ContextMenuOpening" Handler="TreeItemContextMenuOpening" />-->
                        <!--<EventSetter Event="PreviewMouseRightButtonDown" Handler="TreeItemPreviewMouseRightButtonDown" />-->
                    </Style>
                </TreeView.Resources>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate DataType="m:TreeItemModel" ItemsSource="{Binding Items}">
                        <StackPanel Orientation="Horizontal">
                            <ContentControl x:Name="iconHost" Margin="0,2,5,1" Focusable="False" />
                            <TextBlock Text="{Binding Header}" VerticalAlignment="Center" />
                        </StackPanel>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="False">
                                <Setter TargetName="iconHost" Property="Template" Value="{StaticResource ic_Folder_16x}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource AncestorType=TreeViewItem}}" Value="True">
                                <Setter TargetName="iconHost" Property="Template" Value="{StaticResource ic_FolderOpen_16x}" />
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <ListBox s:SplitPanel.DesiredSize="200"
                     ItemsSource="{Binding Items}"
                     SelectedIndex="{Binding SelectedItemIndex, Mode=TwoWay}">
                <ListBox.Resources>
                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                        <EventSetter Event="MouseDoubleClick" Handler="ListItemMouseDoubleClick" />
                    </Style>
                </ListBox.Resources>
            </ListBox>
        </s:SplitPanel>
    </DockPanel>
</UserControl>
